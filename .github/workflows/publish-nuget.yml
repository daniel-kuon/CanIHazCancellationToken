name: Publish to NuGet

on:
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish'
        required: true
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Determine version
      id: version
      run: |
        if [ "${{ github.event_name }}" == "release" ]; then
          # Extract version from release tag (remove 'v' prefix if present)
          VERSION="${{ github.event.release.tag_name }}"
          VERSION=${VERSION#v}
        else
          # Use manually provided version
          VERSION="${{ github.event.inputs.version }}"
        fi
        echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
        echo "Publishing version: ${VERSION}"

    - name: Update package version
      run: |
        sed -i "s/<PackageVersion>.*<\/PackageVersion>/<PackageVersion>${{ steps.version.outputs.VERSION }}<\/PackageVersion>/" CanIHazCancellationTokenAnalyzer/CanIHazCancellationTokenAnalyzer.csproj

    - name: Restore dependencies
      run: dotnet restore CanIHazCancellationTokenAnalyzer/CanIHazCancellationTokenAnalyzer.csproj

    - name: Build
      run: dotnet build CanIHazCancellationTokenAnalyzer/CanIHazCancellationTokenAnalyzer.csproj --no-restore --configuration Release

    - name: Pack
      run: dotnet pack CanIHazCancellationTokenAnalyzer/CanIHazCancellationTokenAnalyzer.csproj --no-build --configuration Release --output ./packages

    - name: Publish to NuGet
      run: dotnet nuget push ./packages/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate

    - name: Upload package artifact
      uses: actions/upload-artifact@v4
      with:
        name: nuget-package-${{ steps.version.outputs.VERSION }}
        path: ./packages/*.nupkg